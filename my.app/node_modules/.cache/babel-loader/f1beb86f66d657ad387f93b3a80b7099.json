{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/tech47/my-app/my.app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/tech47/my-app/my.app/src/components/Reviews.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-align: initial;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { NavBar, NavBarTitle } from './Nav';\nimport { StackCenter } from './Layout';\nimport { Ratings } from './Content';\nimport { Formik, Form } from 'formik';\nimport { LabeledField } from './Form';\nimport * as Yup from 'yup';\nimport { Button } from './Content';\nimport { Text } from './OfficialTrailer';\nvar ContentText = styled(Text)(_templateObject());\n\nvar Reviews = function Reviews() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    left: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }),\n    center: React.createElement(NavBarTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Reviews\"),\n    right: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(StackCenter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: ''\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting,\n          resetForm = _ref.resetForm;\n      console.log('submiting', {\n        name: values.name,\n        email: values.email\n      }); //onSubmit={(values, actions) => {\n\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 100);\n    } // client\n    //   .query({\n    //     query: LookUpTeacher,\n    //     variables: values\n    //   })\n    //   .then(result => {\n    //     this.setState({\n    //       error:\n    //         'Please request an invitation from your teacher.'\n    //     });\n    //     setSubmitting(false);\n    //   })\n    //   .catch(err => console.log(`Error caught ${err}`));\n    // }}\n    ,\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required(\"Required\"),\n      email: Yup.string().email(\"Invalid\").required(\"Required\")\n    }),\n    render: function render(_ref2) {\n      var isSubmitting = _ref2.isSubmitting;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(LabeledField, {\n        type: \"name\",\n        name: \"name\",\n        label: \"name\",\n        placeholder: \"Name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(LabeledField, {\n        type: \"email\",\n        name: \"email\",\n        label: \"Email\",\n        placeholder: \"Email\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(ContentText, {\n        color: \"#191818\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" Ratings \"), React.createElement(Ratings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Submit\"), console.log(\"submitting\", ubmitting));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n};\n\nexport default Reviews;","map":{"version":3,"sources":["/home/tech47/my-app/my.app/src/components/Reviews.js"],"names":["React","useState","useEffect","styled","NavBar","NavBarTitle","StackCenter","Ratings","Formik","Form","LabeledField","Yup","Button","Text","ContentText","Reviews","name","email","values","setSubmitting","resetForm","console","log","setTimeout","alert","JSON","stringify","object","shape","string","required","isSubmitting","ubmitting"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { NavBar, NavBarTitle } from './Nav';\nimport { StackCenter } from './Layout';\nimport { Ratings } from './Content';\nimport { Formik, Form } from 'formik';\nimport { LabeledField } from './Form';\nimport * as Yup from 'yup';\nimport { Button } from './Content';\nimport { Text } from './OfficialTrailer'\n\nconst ContentText = styled(Text)`\n  text-align: initial;\n`\n\nconst Reviews = () => {\n  \n  return(\n        <div>\n        <NavBar \n             left=<div/>\n             center=<NavBarTitle>{\"Reviews\"}</NavBarTitle>\n             right=<div/> \n             />\n             <StackCenter>\n             <Formik\n                  initialValues={{\n                    name: '',\n                    email: ''\n                  }}\n                   onSubmit={(values, { setSubmitting, resetForm }) => {\n                    console.log('submiting', {\n                      name: values.name,\n                      email: values.email\n                    });\n                    //onSubmit={(values, actions) => {\n                      setTimeout(() => {\n                        alert(JSON.stringify(values, null, 2));\n                        setSubmitting(false);\n                      }, 100);\n                    }}\n                    // client\n                    //   .query({\n                    //     query: LookUpTeacher,\n                    //     variables: values\n                    //   })\n                    //   .then(result => {\n                    //     this.setState({\n                    //       error:\n                    //         'Please request an invitation from your teacher.'\n                    //     });\n                    //     setSubmitting(false);\n                    //   })\n                    //   .catch(err => console.log(`Error caught ${err}`));\n                  // }}\n                  validationSchema={Yup.object().shape({\n                    name: Yup.string()\n                      .required(`Required`),\n                    email: Yup.string()\n                      .email(`Invalid`)\n                      .required(`Required`)\n                  })}\n                  render={({ isSubmitting }) => {\n                    return (\n                      <Form>\n                        <LabeledField\n                          type=\"name\"\n                          name=\"name\"\n                          label={`name`}\n                          placeholder={`Name`}\n                          required\n                        />\n                        <LabeledField\n                          type=\"email\"\n                          name=\"email\"\n                          label={`Email`}\n                          placeholder={`Email`}\n                          required\n                        />\n                          <ContentText color=\"#191818\"> Ratings </ContentText>\n                          <Ratings />\n                          <div />\n                           {/* <button type=\"submit\">Submit</button> */}\n                          <Button onClick={isSubmitting}>Submit</Button>\n                          {console.log(\"submitting\",ubmitting)}\n                      </Form>\n                    );\n                  }}\n                />\n             \n        \n            \n            </StackCenter>\n            </div>\n    )\n}\n\nexport default Reviews;"]},"metadata":{},"sourceType":"module"}