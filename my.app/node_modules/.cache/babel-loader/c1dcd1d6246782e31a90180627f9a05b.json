{"ast":null,"code":"var _jsxFileName = \"/home/tech47/my-app/my.app/src/components/Reviews.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { NavBar, NavBarTitle } from './Nav';\nimport { StackCenter } from './Layout';\nimport { Ratings } from './Content';\nimport { Formik, Form } from 'formik';\nimport { LabeledField } from './Form';\nimport * as Yup from 'yup';\nimport { Button } from './Reviews';\n\nvar Reviews = function Reviews() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    left: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }),\n    center: React.createElement(NavBarTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Reviews\"),\n    right: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(StackCenter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      email: ''\n    },\n    onSubmit: function onSubmit(values, _ref) {// client\n      //   .query({\n      //     query: LookUpTeacher,\n      //     variables: values\n      //   })\n      //   .then(result => {\n      //     this.setState({\n      //       error:\n      //         'Please request an invitation from your teacher.'\n      //     });\n      //     setSubmitting(false);\n      //   })\n      //   .catch(err => console.log(`Error caught ${err}`));\n\n      var setSubmitting = _ref.setSubmitting;\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email(\"Invalid\").required(\"Required\")\n    }),\n    render: function render(_ref2) {\n      var isSubmitting = _ref2.isSubmitting;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(LabeledField, {\n        type: \"email\",\n        name: \"name\",\n        label: \"name\",\n        placeholder: \"Name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(LabeledField, {\n        type: \"email\",\n        name: \"email\",\n        label: \"Email\",\n        placeholder: \"Email\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \" Ratings \"), React.createElement(Ratings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(React.Fragment, null));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n};\n\nexport default Reviews;","map":{"version":3,"sources":["/home/tech47/my-app/my.app/src/components/Reviews.js"],"names":["React","useState","useEffect","styled","NavBar","NavBarTitle","StackCenter","Ratings","Formik","Form","LabeledField","Yup","Button","Reviews","email","values","setSubmitting","object","shape","string","required","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAEpB,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AACK,IAAA,IAAI,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV;AAEK,IAAA,MAAM,EAAC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,SAAd,CAFZ;AAGK,IAAA,KAAK,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAMK,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AACK,IAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE;AADM,KADpB;AAIK,IAAA,QAAQ,EAAE,kBAACC,MAAD,QAA+B,CACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAbuC,UAApBC,aAAoB,QAApBA,aAAoB;AAcxC,KAlBN;AAmBK,IAAA,gBAAgB,EAAEL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AACnCJ,MAAAA,KAAK,EAAEH,GAAG,CAACQ,MAAJ,GACJL,KADI,YAEJM,QAFI;AAD4B,KAAnB,CAnBvB;AAwBK,IAAA,MAAM,EAAE,uBAAsB;AAAA,UAAnBC,YAAmB,SAAnBA,YAAmB;AAC5B,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,QAHP;AAIE,QAAA,WAAW,QAJb;AAKE,QAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,SAHP;AAIE,QAAA,WAAW,SAJb;AAKE,QAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAfJ,EAgBI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,EAiBE,yCAjBF,CADF;AAuBD,KAhDN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CANL,CADN;AAgED,CAlED;;AAoEA,eAAeR,OAAf","sourcesContent":["import React,{ useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { NavBar, NavBarTitle } from './Nav';\nimport { StackCenter } from './Layout';\nimport { Ratings } from './Content';\nimport { Formik, Form } from 'formik';\nimport { LabeledField } from './Form';\nimport * as Yup from 'yup';\nimport { Button } from './Reviews'\n\n\n\nconst Reviews = () => {\n  \n  return(\n        <div>\n        <NavBar \n             left=<div/>\n             center=<NavBarTitle>{\"Reviews\"}</NavBarTitle>\n             right=<div/> \n             />\n             <StackCenter>\n             <Formik\n                  initialValues={{\n                    email: ''\n                  }}\n                  onSubmit={(values, { setSubmitting }) => {\n                    // client\n                    //   .query({\n                    //     query: LookUpTeacher,\n                    //     variables: values\n                    //   })\n                    //   .then(result => {\n                    //     this.setState({\n                    //       error:\n                    //         'Please request an invitation from your teacher.'\n                    //     });\n                    //     setSubmitting(false);\n                    //   })\n                    //   .catch(err => console.log(`Error caught ${err}`));\n                  }}\n                  validationSchema={Yup.object().shape({\n                    email: Yup.string()\n                      .email(`Invalid`)\n                      .required(`Required`)\n                  })}\n                  render={({ isSubmitting }) => {\n                    return (\n                      <Form>\n                        <LabeledField\n                          type=\"email\"\n                          name=\"name\"\n                          label={`name`}\n                          placeholder={`Name`}\n                          required\n                        />\n                        <LabeledField\n                          type=\"email\"\n                          name=\"email\"\n                          label={`Email`}\n                          placeholder={`Email`}\n                          required\n                        />\n                          <p> Ratings </p>\n                          <Ratings />\n                        <>\n                        </>\n                      \n                      </Form>\n                    );\n                  }}\n                />\n             \n        \n            \n            </StackCenter>\n            </div>\n    )\n}\n\nexport default Reviews;"]},"metadata":{},"sourceType":"module"}